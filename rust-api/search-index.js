var searchIndex = new Map(JSON.parse('[["sile",{"t":"PPICHHHHHHCHFNNONNONNOOONONNNNONOOOOOOOONNNNNOCFNNNNNNNNNNNNNNNNNNNNHNNNN","n":["Err","Ok","Result","cli","get_rusile_exports","inject_paths","inject_version","load_sile","run","start_luavm","types","version","Cli","augment_args","augment_args_for_update","backend","borrow","borrow_mut","class","command","command_for_update","debug","evaluate","evaluate_after","fmt","fontmanager","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","luarocks_tree","makedeps","option","output","postamble","preamble","quiet","traceback","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use","semver","Semver","add_fields","add_methods","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","fmt","from","from_lua","from_lua_args","from_lua_multi","from_stack_args","from_stack_multi","into","into_lua","into_lua_multi","new","push_into_stack_multi","semver","to_owned","try_from","try_into","type_id"],"q":[[0,"sile"],[12,"sile::cli"],[46,"sile::types"],[47,"sile::types::semver"],[73,"mlua::state"],[74,"mlua::table"],[75,"mlua::error"],[76,"std::path"],[77,"alloc::vec"],[78,"core::option"],[79,"alloc::string"],[80,"clap_builder::builder::command"],[81,"core::fmt"],[82,"clap_builder::parser::matches::arg_matches"],[83,"clap_builder"],[84,"core::result"],[85,"clap_builder::util::id"],[86,"core::any"],[87,"mlua::userdata"],[88,"semver"],[89,"mlua::value"],[90,"mlua::multi"],[91,"mlua::state::raw"]],"i":"j0```````````Al00000000000000000000000000000000``Bl0000000000000000000`0000","f":"````{{{d{b}}}{{h{f}}}}{b{{j{b}}}}00{{{A`{{n{l}}}}{A`{Ab}}{A`{Ab}}{A`{{n{Ab}}}}{A`{{n{Ab}}}}{A`{{n{Ab}}}}{A`{Ab}}{A`{{n{l}}}}{A`{l}}{A`{l}}{A`{{n{Ab}}}}{A`{{n{l}}}}{A`{{n{l}}}}{A`{{n{Ab}}}}AdAd}{{j{Af}}}}{{}{{j{b}}}}`{{}{{j{Ab}}}}`{AhAh}0`{d{{d{c}}}{}}{{{d{Aj}}}{{d{Ajc}}}{}}`{{}Ah}0```{{{d{Al}}{d{AjAn}}}B`}`{cc{}}{{{d{Bb}}}{{Bf{AlBd}}}}{{{d{AjBb}}}{{Bf{AlBd}}}}{{}{{A`{Bh}}}}`{{}c{}}````````{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{dBj}{{{d{AjAl}}{d{Bb}}}{{Bf{AfBd}}}}{{{d{AjAl}}{d{AjBb}}}{{Bf{AfBd}}}}```{{{d{Ajc}}}Af{{Bn{Bl}}}}{{{d{Ajc}}}Af{{C`{Bl}}}}?>{{{d{Bl}}}Bl}{{d{d{Ajc}}}Af{}}{{dCb}Af}{{{d{Bl}}}{{d{Cd}}}}{{{d{Bl}}{d{AjAn}}}B`}{cc{}}{{Cf{d{b}}}{{h{Bl}}}}{{ChCj{A`{{d{Cl}}}}{d{b}}}{{Bf{cCn}}}{}}{{Ch{d{b}}}{{Bf{cCn}}}{}}{{D`Cj{A`{{d{Cl}}}}{d{Db}}}{{Bf{cCn}}}{}}{{D`{d{Db}}}{{Bf{cCn}}}{}}{{}c{}}{{{d{b}}}{{Bf{CfCn}}}}{{{d{b}}}{{Bf{ChCn}}}}{{{d{Cl}}}{{j{Bl}}}}{{{d{Db}}}{{Bf{D`Cn}}}}{Ab{{j{Bl}}}}{dc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{dBj}","D":"Bn","p":[[5,"Lua",73],[1,"reference",null,null,1],[5,"Table",74],[8,"Result",75],[8,"Result",0],[5,"PathBuf",76],[5,"Vec",77],[6,"Option",78,null,1],[5,"String",79],[1,"bool"],[1,"unit"],[5,"Command",80],[0,"mut"],[5,"Cli",12],[5,"Formatter",81],[8,"Result",81],[5,"ArgMatches",82],[8,"Error",83],[6,"Result",84,null,1],[5,"Id",85],[5,"TypeId",86],[5,"Semver",47],[10,"UserDataFields",87],[10,"UserDataMethods",87],[1,"u8"],[5,"Version",88],[6,"Value",89],[5,"MultiValue",90],[1,"usize"],[1,"str"],[6,"Error",75],[1,"i32"],[5,"RawLua",91]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADIACwAAAAAAAwAJAA4AAQARAAEAFAABABkAAAAcAAIAKQAEAC8ACgA7AAQAQQAIAA==","P":[[16,"T"],[19,""],[26,"T"],[27,""],[31,"U"],[40,"U,T"],[41,"U"],[42,""],[48,"F"],[49,"M"],[50,"T"],[52,""],[53,"T"],[54,""],[57,"T"],[58,""],[59,"T"],[63,"U"],[64,""],[69,"T"],[70,"U,T"],[71,"U"],[72,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3379]}